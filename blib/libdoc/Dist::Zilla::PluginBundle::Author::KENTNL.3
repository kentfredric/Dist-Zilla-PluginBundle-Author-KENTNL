.\" Automatically generated by Pod::Man 2.26 (Pod::Simple 3.22)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::PluginBundle::Author::KENTNL 3"
.TH Dist::Zilla::PluginBundle::Author::KENTNL 3 "2012-07-08" "perl v5.16.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::PluginBundle::Author::KENTNL \- BeLike::KENTNL when you build your distributions.
.SH "VERSION"
.IX Header "VERSION"
version 1.4.2
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    [@Author::KENTNL]
\&    no_cpan = 1 ; skip upload to cpan and twitter.
\&    no_git  = 1 ; skip things that work with git.
\&    release_fail = 1 ; asplode!.
\&    git_versions = 1 ;  use git::nextversion for versioning
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the plug-in bundle that \s-1KENTNL\s0 uses. It exists mostly because he is very lazy
and wants others to be using what he's using if they want to be doing work on his modules.
.SH "NAMING SCHEME"
.IX Header "NAMING SCHEME"
As I blogged about on \f(CW\*(C`blog.fox.geek.nz\*(C'\fR : Making a Minting Profile as a CPANized Dist  <http://bit.ly/hAwl4S>,
this bundle advocates a new naming system for people who are absolutely convinced they want their Author-Centric distribution uploaded to \s-1CPAN\s0.
.PP
As we have seen with Dist::Zilla there have been a slew of PluginBundles with \s-1CPANID\s0's in their name, to the point that there is a copious amount of name-space pollution
in the PluginBundle name-space, and more Author bundles than task-bundles, which was really what the name-space was designed for, and I'm petitioning you to help reduce
this annoyance in future modules.
.PP
From a \s-1CPAN\s0 testers perspective, the annoyance of lots of CPANID-dists is similar to the annoyance of the whole \s-1DPCHRIST::\s0 subspace, and that if this pattern continues,
it will mean for the testers who do not wish to test everyones personal modules, that they will have to work hard to avoid this. If \s-1DPCHRIST::\s0 had used something like
Author::DPCHRIST:: instead, I doubt so many people would be horrified by it, because you can just have a policy/rule that excludes ^Author::, and everyone else who goes
that way can be quietly ignored.
.PP
Then we could probably rationally add that same restriction to the irc announce bots, the \*(L"recent modules\*(R" list and so-forth, and possibly even apply special indexing restrictions
or something so people wouldn't even have to know those modules exist on cpan!
.PP
So, for the sake of cleanliness, semantics, and general global sanity, I ask you to join me with my Author:: naming policy to voluntarily segregate modules that are most
likely of only personal use from those that have more general application.
.PP
.Vb 6
\&    Dist::Zilla::Plugin::Foo                    # [Foo]                 dist\-zilla plugins for general use
\&    Dist::Zilla::Plugin::Author::KENTNL::Foo    # [Author::KENTNL::Foo] foo that only KENTNL will probably have use for
\&    Dist::Zilla::PluginBundle::Classic          # [@Classic]            A bundle that can have practical use by many
\&    Dist::Zilla::PluginBundle::Author::KENTNL   # [@Author::KENTNL]     KENTNL\*(Aqs primary plugin bundle
\&    Dist::Zilla::MintingProfile::Default        # A minting profile that is used by all
\&    Dist::Zilla::MintingProfile::Author::KENTNL # A minting profile that only KENTNL will find of use.
.Ve
.SS "Current Proponents"
.IX Subsection "Current Proponents"
I wish to give proper respect to the people out there already implementing this scheme:
.ie n .IP "@Author::DOHERTY  \- Mike Doherty's, Author Bundle." 4
.el .IP "\f(CW@Author::DOHERTY\fR  \- Mike Doherty's, Author Bundle." 4
.IX Item "@Author::DOHERTY  - Mike Doherty's, Author Bundle."
.PD 0
.ie n .IP "@Author::OLIVER  \- Oliver Gorwits', Author Bundle." 4
.el .IP "\f(CW@Author::OLIVER\fR  \- Oliver Gorwits', Author Bundle." 4
.IX Item "@Author::OLIVER  - Oliver Gorwits', Author Bundle."
.ie n .IP """Dist::Zilla::PluginBundle::Author::"" namespace  <http://bit.ly/dIovQI> \- Oliver Gorwit's blog on the subject." 4
.el .IP "\f(CWDist::Zilla::PluginBundle::Author::\fR namespace  <http://bit.ly/dIovQI> \- Oliver Gorwit's blog on the subject." 4
.IX Item "Dist::Zilla::PluginBundle::Author:: namespace  <http://bit.ly/dIovQI> - Oliver Gorwit's blog on the subject."
.ie n .IP "@Author::LESPEA  \- Adam Lesperance's, Author Bundle." 4
.el .IP "\f(CW@Author::LESPEA\fR  \- Adam Lesperance's, Author Bundle." 4
.IX Item "@Author::LESPEA  - Adam Lesperance's, Author Bundle."
.ie n .IP "@Author::ALEXBIO  \- Alessandro Ghedini's, Author Bundle." 4
.el .IP "\f(CW@Author::ALEXBIO\fR  \- Alessandro Ghedini's, Author Bundle." 4
.IX Item "@Author::ALEXBIO  - Alessandro Ghedini's, Author Bundle."
.ie n .IP "@Author::RWSTAUNER  \- Randy Stauner's, Author Bundle." 4
.el .IP "\f(CW@Author::RWSTAUNER\fR  \- Randy Stauner's, Author Bundle." 4
.IX Item "@Author::RWSTAUNER  - Randy Stauner's, Author Bundle."
.ie n .IP "@Author::WOLVERIAN  \- Ilmari Vacklin's, Author Bundle." 4
.el .IP "\f(CW@Author::WOLVERIAN\fR  \- Ilmari Vacklin's, Author Bundle." 4
.IX Item "@Author::WOLVERIAN  - Ilmari Vacklin's, Author Bundle."
.ie n .IP "@Author::YANICK  \- Yanick Champoux's, Author Bundle." 4
.el .IP "\f(CW@Author::YANICK\fR  \- Yanick Champoux's, Author Bundle." 4
.IX Item "@Author::YANICK  - Yanick Champoux's, Author Bundle."
.ie n .IP "@Author::RUSSOZ  \- Alexei Znamensky's, Author Bundle." 4
.el .IP "\f(CW@Author::RUSSOZ\fR  \- Alexei Znamensky's, Author Bundle." 4
.IX Item "@Author::RUSSOZ  - Alexei Znamensky's, Author Bundle."
.PD
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS """bundle_config"""
.el .SS "\f(CWbundle_config\fP"
.IX Subsection "bundle_config"
See the \f(CW\*(C`PluginBundle\*(C'\fR role for what this is for, it is a method to satisfy that role.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
all of these have to merely exist to constitute a \*(L"true\*(R" status.
.SS "\s-1KENTNL_NOGIT\s0"
.IX Subsection "KENTNL_NOGIT"
the same as no_git=1
.SS "\s-1KENTNL_NOCPAN\s0"
.IX Subsection "KENTNL_NOCPAN"
same as no_cpan = 1
.SS "\s-1KENTNL_RELEASE_FAIL\s0"
.IX Subsection "KENTNL_RELEASE_FAIL"
same as release_fail=1
.SH "AUTHOR"
.IX Header "AUTHOR"
Kent Fredric <kentnl@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Kent Fredric.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
