NAME
    Dist::Zilla::PluginBundle::Author::KENTNL - BeLike::KENTNL when you
    build your distributions.

VERSION
    version 1.0.9

SYNOPSIS
        [@Author::KENTNL]
        no_cpan = 1 ; skip upload to cpan and twitter.
        no_git  = 1 ; skip things that work with git.
        twitter_only = 1 ; skip uploading to cpan, don't git, but twitter with fakerelease.
        release_fail = 1 ; asplode!. ( non-twitter only )
        git_versions = 1 ;  use git::nextversion for versioning

DESCRIPTION
    This is the plug-in bundle that KENTNL uses. It exists mostly because he
    is very lazy and wants others to be using what he's using if they want
    to be doing work on his modules.

NAMING SCHEME
    As I blogged about on "blog.fox.geek.nz" : Making a Minting Profile as a
    CPANized Dist <http://bit.ly/hAwl4S>, this bundle advocates a new naming
    system for people who are absolutely convinced they want their
    Author-Centric distribution uploaded to CPAN.

    As we have seen with Dist::Zilla there have been a slew of PluginBundles
    with CPANID's in their name, to the point that there is a copious amount
    of name-space pollution in the PluginBundle name-space, and more Author
    bundles than task-bundles, which was really what the name-space was
    designed for, and I'm petitioning you to help reduce this annoyance in
    future modules.

    From a CPAN testers perspective, the annoyance of lots of CPANID-dists
    is similar to the annoyance of the whole DPCHRIST:: subspace, and that
    if this pattern continues, it will mean for the testers who do not wish
    to test everyones personal modules, that they will have to work hard to
    avoid this. If DPCHRIST:: had used something like Author::DPCHRIST::
    instead, I doubt so many people would be horrified by it, because you
    can just have a policy/rule that excludes ^Author::, and everyone else
    who goes that way can be quietly ignored.

    Then we could probably rationally add that same restriction to the irc
    announce bots, the "recent modules" list and so-forth, and possibly even
    apply special indexing restrictions or something so people wouldn't even
    have to know those modules exist on cpan!

    So, for the sake of cleanliness, semantics, and general global sanity, I
    ask you to join me with my Author:: naming policy to voluntarily
    segregate modules that are most likely of only personal use from those
    that have more general application.

        Dist::Zilla::Plugin::Foo                    # [Foo]                 dist-zilla plugins for general use
        Dist::Zilla::Plugin::Author::KENTNL::Foo    # [Author::KENTNL::Foo] foo that only KENTNL will probably have use for
        Dist::Zilla::PluginBundle::Classic          # [@Classic]            A bundle that can have practical use by many
        Dist::Zilla::PluginBundle::Author::KENTNL   # [@Author::KENTNL]     KENTNL's primary plugin bundle
        Dist::Zilla::MintingProfile::Default        # A minting profile that is used by all
        Dist::Zilla::MintingProfile::Author::KENTNL # A minting profile that only KENTNL will find of use.

  Current Proponents
    I wish to give proper respect to the people out there already
    implementing this scheme:

    @Author::DOHERTY - Mike Doherty's, Author Bundle.
    @Author::OLIVER - Oliver Gorwits', Author Bundle.
    "Dist::Zilla::PluginBundle::Author::" namespace <http://bit.ly/dIovQI> -
    Oliver Gorwit's blog on the subject.

METHODS
  bundle_config
    See the "PluginBundle" role for what this is for, it is a method to
    satisfy that role.

ENVIRONMENT
    all of these have to merely exist to constitute a "true" status.

  KENTNL_NOGIT
    the same as no_git=1

  KENTNL_NOCPAN
    same as no_cpan = 1

  KENTNL_TWITTER_ONLY
    same as twitter_only=1

  KENTNL_RELEASE_FAIL
    same as release_fail=1

AUTHOR
    Kent Fredric <kentnl@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2011 by Kent Fredric.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

